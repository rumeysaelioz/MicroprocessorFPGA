--alt_u_div DEVICE_FAMILY="Cyclone IV E" LPM_PIPELINE=0 MAXIMIZE_SPEED=5 SKIP_BITS=0 WIDTH_D=6 WIDTH_N=9 WIDTH_Q=9 WIDTH_R=6 denominator numerator quotient remainder
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_abs 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_divide 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION add_sub_7pc (dataa[0..0], datab[0..0])
RETURNS ( cout, result[0..0]);
FUNCTION add_sub_8pc (dataa[1..0], datab[1..0])
RETURNS ( cout, result[1..0]);

--synthesis_resources = lut 46 
SUBDESIGN alt_u_div_h4f
( 
	denominator[5..0]	:	input;
	numerator[8..0]	:	input;
	quotient[8..0]	:	output;
	remainder[5..0]	:	output;
) 
VARIABLE 
	add_sub_0 : add_sub_7pc;
	add_sub_1 : add_sub_8pc;
	add_sub_2_result_int[3..0]	:	WIRE;
	add_sub_2_cout	:	WIRE;
	add_sub_2_dataa[2..0]	:	WIRE;
	add_sub_2_datab[2..0]	:	WIRE;
	add_sub_2_result[2..0]	:	WIRE;
	add_sub_3_result_int[4..0]	:	WIRE;
	add_sub_3_cout	:	WIRE;
	add_sub_3_dataa[3..0]	:	WIRE;
	add_sub_3_datab[3..0]	:	WIRE;
	add_sub_3_result[3..0]	:	WIRE;
	add_sub_4_result_int[5..0]	:	WIRE;
	add_sub_4_cout	:	WIRE;
	add_sub_4_dataa[4..0]	:	WIRE;
	add_sub_4_datab[4..0]	:	WIRE;
	add_sub_4_result[4..0]	:	WIRE;
	add_sub_5_result_int[6..0]	:	WIRE;
	add_sub_5_cout	:	WIRE;
	add_sub_5_dataa[5..0]	:	WIRE;
	add_sub_5_datab[5..0]	:	WIRE;
	add_sub_5_result[5..0]	:	WIRE;
	add_sub_6_result_int[7..0]	:	WIRE;
	add_sub_6_cout	:	WIRE;
	add_sub_6_dataa[6..0]	:	WIRE;
	add_sub_6_datab[6..0]	:	WIRE;
	add_sub_6_result[6..0]	:	WIRE;
	add_sub_7_result_int[7..0]	:	WIRE;
	add_sub_7_cout	:	WIRE;
	add_sub_7_dataa[6..0]	:	WIRE;
	add_sub_7_datab[6..0]	:	WIRE;
	add_sub_7_result[6..0]	:	WIRE;
	add_sub_8_result_int[7..0]	:	WIRE;
	add_sub_8_cout	:	WIRE;
	add_sub_8_dataa[6..0]	:	WIRE;
	add_sub_8_datab[6..0]	:	WIRE;
	add_sub_8_result[6..0]	:	WIRE;
	DenominatorIn[69..0]	: WIRE;
	DenominatorIn_tmp[69..0]	: WIRE;
	gnd_wire	: WIRE;
	nose[89..0]	: WIRE;
	NumeratorIn[89..0]	: WIRE;
	NumeratorIn_tmp[89..0]	: WIRE;
	prestg[62..0]	: WIRE;
	quotient_tmp[8..0]	: WIRE;
	sel[59..0]	: WIRE;
	selnose[89..0]	: WIRE;
	StageIn[69..0]	: WIRE;
	StageIn_tmp[69..0]	: WIRE;
	StageOut[62..0]	: WIRE;

BEGIN 
	add_sub_0.dataa[0..0] = NumeratorIn[8..8];
	add_sub_0.datab[0..0] = DenominatorIn[0..0];
	add_sub_1.dataa[] = ( StageIn[7..7], NumeratorIn[16..16]);
	add_sub_1.datab[1..0] = DenominatorIn[8..7];
	add_sub_2_result_int[] = (0, add_sub_2_dataa[]) - (0, add_sub_2_datab[]);
	add_sub_2_result[] = add_sub_2_result_int[2..0];
	add_sub_2_cout = !add_sub_2_result_int[3];
	add_sub_2_dataa[] = ( StageIn[15..14], NumeratorIn[24..24]);
	add_sub_2_datab[] = DenominatorIn[16..14];
	add_sub_3_result_int[] = (0, add_sub_3_dataa[]) - (0, add_sub_3_datab[]);
	add_sub_3_result[] = add_sub_3_result_int[3..0];
	add_sub_3_cout = !add_sub_3_result_int[4];
	add_sub_3_dataa[] = ( StageIn[23..21], NumeratorIn[32..32]);
	add_sub_3_datab[] = DenominatorIn[24..21];
	add_sub_4_result_int[] = (0, add_sub_4_dataa[]) - (0, add_sub_4_datab[]);
	add_sub_4_result[] = add_sub_4_result_int[4..0];
	add_sub_4_cout = !add_sub_4_result_int[5];
	add_sub_4_dataa[] = ( StageIn[31..28], NumeratorIn[40..40]);
	add_sub_4_datab[] = DenominatorIn[32..28];
	add_sub_5_result_int[] = (0, add_sub_5_dataa[]) - (0, add_sub_5_datab[]);
	add_sub_5_result[] = add_sub_5_result_int[5..0];
	add_sub_5_cout = !add_sub_5_result_int[6];
	add_sub_5_dataa[] = ( StageIn[39..35], NumeratorIn[48..48]);
	add_sub_5_datab[] = DenominatorIn[40..35];
	add_sub_6_result_int[] = (0, add_sub_6_dataa[]) - (0, add_sub_6_datab[]);
	add_sub_6_result[] = add_sub_6_result_int[6..0];
	add_sub_6_cout = !add_sub_6_result_int[7];
	add_sub_6_dataa[] = ( StageIn[47..42], NumeratorIn[56..56]);
	add_sub_6_datab[] = DenominatorIn[48..42];
	add_sub_7_result_int[] = (0, add_sub_7_dataa[]) - (0, add_sub_7_datab[]);
	add_sub_7_result[] = add_sub_7_result_int[6..0];
	add_sub_7_cout = !add_sub_7_result_int[7];
	add_sub_7_dataa[] = ( StageIn[54..49], NumeratorIn[64..64]);
	add_sub_7_datab[] = DenominatorIn[55..49];
	add_sub_8_result_int[] = (0, add_sub_8_dataa[]) - (0, add_sub_8_datab[]);
	add_sub_8_result[] = add_sub_8_result_int[6..0];
	add_sub_8_cout = !add_sub_8_result_int[7];
	add_sub_8_dataa[] = ( StageIn[61..56], NumeratorIn[72..72]);
	add_sub_8_datab[] = DenominatorIn[62..56];
	DenominatorIn[] = DenominatorIn_tmp[];
	DenominatorIn_tmp[] = ( DenominatorIn[62..0], ( gnd_wire, denominator[]));
	gnd_wire = B"0";
	nose[] = ( B"000000000", add_sub_8_cout, B"000000000", add_sub_7_cout, B"000000000", add_sub_6_cout, B"000000000", add_sub_5_cout, B"000000000", add_sub_4_cout, B"000000000", add_sub_3_cout, B"000000000", add_sub_2_cout, B"000000000", add_sub_1.cout, B"000000000", add_sub_0.cout);
	NumeratorIn[] = NumeratorIn_tmp[];
	NumeratorIn_tmp[] = ( NumeratorIn[80..0], numerator[]);
	prestg[] = ( add_sub_8_result[], add_sub_7_result[], add_sub_6_result[], GND, add_sub_5_result[], B"00", add_sub_4_result[], B"000", add_sub_3_result[], B"0000", add_sub_2_result[], B"00000", add_sub_1.result[], B"000000", add_sub_0.result[]);
	quotient[] = quotient_tmp[];
	quotient_tmp[] = ( (! selnose[0..0]), (! selnose[10..10]), (! selnose[20..20]), (! selnose[30..30]), (! selnose[40..40]), (! selnose[50..50]), (! selnose[60..60]), (! selnose[70..70]), (! selnose[80..80]));
	remainder[5..0] = StageIn[68..63];
	sel[] = ( gnd_wire, (sel[59..59] # DenominatorIn[68..68]), (sel[58..58] # DenominatorIn[67..67]), (sel[57..57] # DenominatorIn[66..66]), (sel[56..56] # DenominatorIn[65..65]), (sel[55..55] # DenominatorIn[64..64]), gnd_wire, (sel[53..53] # DenominatorIn[61..61]), (sel[52..52] # DenominatorIn[60..60]), (sel[51..51] # DenominatorIn[59..59]), (sel[50..50] # DenominatorIn[58..58]), (sel[49..49] # DenominatorIn[57..57]), gnd_wire, (sel[47..47] # DenominatorIn[54..54]), (sel[46..46] # DenominatorIn[53..53]), (sel[45..45] # DenominatorIn[52..52]), (sel[44..44] # DenominatorIn[51..51]), (sel[43..43] # DenominatorIn[50..50]), gnd_wire, (sel[41..41] # DenominatorIn[47..47]), (sel[40..40] # DenominatorIn[46..46]), (sel[39..39] # DenominatorIn[45..45]), (sel[38..38] # DenominatorIn[44..44]), (sel[37..37] # DenominatorIn[43..43]), gnd_wire, (sel[35..35] # DenominatorIn[40..40]), (sel[34..34] # DenominatorIn[39..39]), (sel[33..33] # DenominatorIn[38..38]), (sel[32..32] # DenominatorIn[37..37]), (sel[31..31] # DenominatorIn[36..36]), gnd_wire, (sel[29..29] # DenominatorIn[33..33]), (sel[28..28] # DenominatorIn[32..32]), (sel[27..27] # DenominatorIn[31..31]), (sel[26..26] # DenominatorIn[30..30]), (sel[25..25] # DenominatorIn[29..29]), gnd_wire, (sel[23..23] # DenominatorIn[26..26]), (sel[22..22] # DenominatorIn[25..25]), (sel[21..21] # DenominatorIn[24..24]), (sel[20..20] # DenominatorIn[23..23]), (sel[19..19] # DenominatorIn[22..22]), gnd_wire, (sel[17..17] # DenominatorIn[19..19]), (sel[16..16] # DenominatorIn[18..18]), (sel[15..15] # DenominatorIn[17..17]), (sel[14..14] # DenominatorIn[16..16]), (sel[13..13] # DenominatorIn[15..15]), gnd_wire, (sel[11..11] # DenominatorIn[12..12]), (sel[10..10] # DenominatorIn[11..11]), (sel[9..9] # DenominatorIn[10..10]), (sel[8..8] # DenominatorIn[9..9]), (sel[7..7] # DenominatorIn[8..8]), gnd_wire, (sel[5..5] # DenominatorIn[5..5]), (sel[4..4] # DenominatorIn[4..4]), (sel[3..3] # DenominatorIn[3..3]), (sel[2..2] # DenominatorIn[2..2]), (sel[1..1] # DenominatorIn[1..1]));
	selnose[] = ( (! nose[89..89]), (! nose[88..88]), (! nose[87..87]), ((! nose[86..86]) # sel[59..59]), ((! nose[85..85]) # sel[58..58]), ((! nose[84..84]) # sel[57..57]), ((! nose[83..83]) # sel[56..56]), ((! nose[82..82]) # sel[55..55]), ((! nose[81..81]) # sel[54..54]), (! nose[80..80]), (! nose[79..79]), (! nose[78..78]), ((! nose[77..77]) # sel[53..53]), ((! nose[76..76]) # sel[52..52]), ((! nose[75..75]) # sel[51..51]), ((! nose[74..74]) # sel[50..50]), ((! nose[73..73]) # sel[49..49]), ((! nose[72..72]) # sel[48..48]), (! nose[71..71]), (! nose[70..70]), (! nose[69..69]), ((! nose[68..68]) # sel[47..47]), ((! nose[67..67]) # sel[46..46]), ((! nose[66..66]) # sel[45..45]), ((! nose[65..65]) # sel[44..44]), ((! nose[64..64]) # sel[43..43]), ((! nose[63..63]) # sel[42..42]), (! nose[62..62]), (! nose[61..61]), (! nose[60..60]), ((! nose[59..59]) # sel[41..41]), ((! nose[58..58]) # sel[40..40]), ((! nose[57..57]) # sel[39..39]), ((! nose[56..56]) # sel[38..38]), ((! nose[55..55]) # sel[37..37]), ((! nose[54..54]) # sel[36..36]), (! nose[53..53]), (! nose[52..52]), (! nose[51..51]), ((! nose[50..50]) # sel[35..35]), ((! nose[49..49]) # sel[34..34]), ((! nose[48..48]) # sel[33..33]), ((! nose[47..47]) # sel[32..32]), ((! nose[46..46]) # sel[31..31]), ((! nose[45..45]) # sel[30..30]), (! nose[44..44]), (! nose[43..43]), (! nose[42..42]), ((! nose[41..41]) # sel[29..29]), ((! nose[40..40]) # sel[28..28]), ((! nose[39..39]) # sel[27..27]), ((! nose[38..38]) # sel[26..26]), ((! nose[37..37]) # sel[25..25]), ((! nose[36..36]) # sel[24..24]), (! nose[35..35]), (! nose[34..34]), (! nose[33..33]), ((! nose[32..32]) # sel[23..23]), ((! nose[31..31]) # sel[22..22]), ((! nose[30..30]) # sel[21..21]), ((! nose[29..29]) # sel[20..20]), ((! nose[28..28]) # sel[19..19]), ((! nose[27..27]) # sel[18..18]), (! nose[26..26]), (! nose[25..25]), (! nose[24..24]), ((! nose[23..23]) # sel[17..17]), ((! nose[22..22]) # sel[16..16]), ((! nose[21..21]) # sel[15..15]), ((! nose[20..20]) # sel[14..14]), ((! nose[19..19]) # sel[13..13]), ((! nose[18..18]) # sel[12..12]), (! nose[17..17]), (! nose[16..16]), (! nose[15..15]), ((! nose[14..14]) # sel[11..11]), ((! nose[13..13]) # sel[10..10]), ((! nose[12..12]) # sel[9..9]), ((! nose[11..11]) # sel[8..8]), ((! nose[10..10]) # sel[7..7]), ((! nose[9..9]) # sel[6..6]), (! nose[8..8]), (! nose[7..7]), (! nose[6..6]), ((! nose[5..5]) # sel[5..5]), ((! nose[4..4]) # sel[4..4]), ((! nose[3..3]) # sel[3..3]), ((! nose[2..2]) # sel[2..2]), ((! nose[1..1]) # sel[1..1]), ((! nose[0..0]) # sel[0..0]));
	StageIn[] = StageIn_tmp[];
	StageIn_tmp[] = ( StageOut[62..0], B"0000000");
	StageOut[] = ( ((( StageIn[61..56], NumeratorIn[72..72]) & selnose[80..80]) # (prestg[62..56] & (! selnose[80..80]))), ((( StageIn[54..49], NumeratorIn[64..64]) & selnose[70..70]) # (prestg[55..49] & (! selnose[70..70]))), ((( StageIn[47..42], NumeratorIn[56..56]) & selnose[60..60]) # (prestg[48..42] & (! selnose[60..60]))), ((( StageIn[40..35], NumeratorIn[48..48]) & selnose[50..50]) # (prestg[41..35] & (! selnose[50..50]))), ((( StageIn[33..28], NumeratorIn[40..40]) & selnose[40..40]) # (prestg[34..28] & (! selnose[40..40]))), ((( StageIn[26..21], NumeratorIn[32..32]) & selnose[30..30]) # (prestg[27..21] & (! selnose[30..30]))), ((( StageIn[19..14], NumeratorIn[24..24]) & selnose[20..20]) # (prestg[20..14] & (! selnose[20..20]))), ((( StageIn[12..7], NumeratorIn[16..16]) & selnose[10..10]) # (prestg[13..7] & (! selnose[10..10]))), ((( StageIn[5..0], NumeratorIn[8..8]) & selnose[0..0]) # (prestg[6..0] & (! selnose[0..0]))));
END;
--VALID FILE
